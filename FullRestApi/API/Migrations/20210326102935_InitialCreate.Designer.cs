// <auto-generated />
using System;
using FullRESTAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FullRESTAPI.Migrations
{
    [DbContext(typeof(ApplicationDBContex))]
    [Migration("20210326102935_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("FullRESTAPI.Models.EFModels.EFCategorie", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CategoriesListsID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoriesListsID");

                    b.HasIndex("UserID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("FullRESTAPI.Models.EFModels.EFCategoriesLists", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CategoriesLists");
                });

            modelBuilder.Entity("FullRESTAPI.Models.EFModels.EFJars", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Aim")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentMoney")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Jars");
                });

            modelBuilder.Entity("FullRESTAPI.Models.EFModels.EFNotification", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<int?>("NotificationListsID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("NotificationListsID");

                    b.HasIndex("UserID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("FullRESTAPI.Models.EFModels.EFNotificationLists", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("NotificationLists");
                });

            modelBuilder.Entity("FullRESTAPI.Models.EFModels.EFShoppingElement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("ShoppingElements");
                });

            modelBuilder.Entity("FullRESTAPI.Models.EFModels.EFTransaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("CategorieID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsExpense")
                        .HasColumnType("bit");

                    b.Property<string>("Titl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategorieID");

                    b.HasIndex("UserID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("FullRESTAPI.Models.EFModels.EFUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AvatarLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FullRESTAPI.Models.EFModels.EFCategorie", b =>
                {
                    b.HasOne("FullRESTAPI.Models.EFModels.EFCategoriesLists", "CategoriesLists")
                        .WithMany()
                        .HasForeignKey("CategoriesListsID");

                    b.HasOne("FullRESTAPI.Models.EFModels.EFUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("CategoriesLists");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FullRESTAPI.Models.EFModels.EFJars", b =>
                {
                    b.HasOne("FullRESTAPI.Models.EFModels.EFUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FullRESTAPI.Models.EFModels.EFNotification", b =>
                {
                    b.HasOne("FullRESTAPI.Models.EFModels.EFNotificationLists", "NotificationLists")
                        .WithMany()
                        .HasForeignKey("NotificationListsID");

                    b.HasOne("FullRESTAPI.Models.EFModels.EFUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("NotificationLists");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FullRESTAPI.Models.EFModels.EFShoppingElement", b =>
                {
                    b.HasOne("FullRESTAPI.Models.EFModels.EFUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FullRESTAPI.Models.EFModels.EFTransaction", b =>
                {
                    b.HasOne("FullRESTAPI.Models.EFModels.EFCategorie", "Categorie")
                        .WithMany()
                        .HasForeignKey("CategorieID");

                    b.HasOne("FullRESTAPI.Models.EFModels.EFUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Categorie");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
